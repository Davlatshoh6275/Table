{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\777\\\\Desktop\\\\React\\\\REAKT\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\\\\qolib\\\\src\\\\Compnent\\\\Radio.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Radio extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      natija: '',\n      inputYes: [{\n        label: \"yes\",\n        bool: false\n      }],\n      imputNo: [{\n        label: \"No\",\n        bool: false\n      }]\n    };\n\n    this.Full = event => {\n      let a = event.target.checked;\n\n      if (a === true) {\n        console.log(\"radio\");\n        this.setState({\n          natija: \"yes\",\n          inputYes: [{\n            label: \"yes\",\n            bool: a\n          }],\n          imputNo: [{\n            label: \"no\",\n            bool: !a\n          }]\n        });\n      } else {\n        console.log(\"xato yes\");\n      }\n    };\n\n    this.Fill = event => {\n      let b = event.target.checked;\n\n      if (b === true) {\n        this.setState({\n          natija: \"no\",\n          imputNo: [{\n            label: \"No\",\n            bool: b\n          }],\n          inputYes: [{\n            label: \"yes\",\n            bool: !b\n          }]\n        });\n      } else {\n        console.log(\"xato\");\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.inputYes.map((item, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            checked: item.bool,\n            onChange: this.Full\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.imputNo.map((item, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            checked: item.bool,\n            onChange: this.Fill\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.state.natija\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/777/Desktop/React/REAKT/Новая папка/qolib/src/Compnent/Radio.jsx"],"names":["React","Component","Radio","state","natija","inputYes","label","bool","imputNo","Full","event","a","target","checked","console","log","setState","Fill","b","render","map","item","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Radio extends Component {\r\n\r\n    state = {\r\n        natija: '',\r\n        inputYes: [\r\n            {\r\n                label: \"yes\",\r\n                bool: false\r\n            },\r\n        ],\r\n        imputNo: [\r\n            {\r\n                label: \"No\",\r\n                bool: false\r\n            }\r\n\r\n        ]\r\n    }\r\n\r\n    Full = (event) => {\r\n        \r\n\r\n        let a = event.target.checked\r\n\r\n\r\n        if (a === true) {\r\n            console.log(\"radio\");\r\n\r\n            this.setState({\r\n                natija: \"yes\",\r\n                inputYes: [\r\n                    {\r\n                        label: \"yes\",\r\n                        bool: a\r\n                    }\r\n                ],\r\n                imputNo: [\r\n                    {\r\n                        label: \"no\",\r\n                        bool: !a\r\n                    }\r\n                ]\r\n            })\r\n\r\n\r\n        } else {\r\n            console.log(\"xato yes\");\r\n        }\r\n    }\r\n\r\n\r\n    Fill = (event) => {\r\n\r\n        let b = event.target.checked\r\n\r\n\r\n\r\n        if(b === true) {\r\n\r\n            this.setState({\r\n                natija: \"no\",\r\n                imputNo: [\r\n                    {\r\n                        label: \"No\",\r\n                        bool: b\r\n                    }\r\n                ],\r\n                inputYes: [\r\n                    {\r\n                        label: \"yes\",\r\n                        bool: !b\r\n                    }\r\n                ]\r\n            })\r\n            \r\n        } else {\r\n            console.log(\"xato\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div>\r\n                    {\r\n                        this.state.inputYes.map((item, index) => <>\r\n                            <label htmlFor=\"\">{item.label}</label>\r\n                            <input type=\"radio\" checked={item.bool} onChange={this.Full} />\r\n                        </>)\r\n                    }\r\n                </div>\r\n\r\n                <div>\r\n                    {\r\n                        this.state.imputNo.map((item, index) => <>\r\n                            <label htmlFor=\"\">{item.label}</label>\r\n                            <input type=\"radio\" checked={item.bool} onChange={this.Fill} />\r\n                        </>)\r\n                    }\r\n                </div>\r\n\r\n                <div>\r\n                    <h1>{this.state.natija}</h1>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}