{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\777\\\\Desktop\\\\React\\\\REAKT\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\\\\qolib\\\\src\\\\Compnent\\\\Radio.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Radio extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      bool: true,\n      natija: '',\n      inputYes: [{\n        label: \"yes\",\n        bool: false\n      }],\n      imputNo: [{\n        label: \"No\",\n        bool: false\n      }]\n    };\n\n    this.Full = event => {\n      const change2 = this.state.inputyes.bool;\n      let a = event.target.checked;\n\n      if (a === true) {\n        this.setState({\n          bool: a,\n          natija: \"yes\"\n        });\n      } else {\n        console.log(\"xato yes\");\n      }\n    };\n\n    this.Fill = event => {\n      const change = this.state.imputYes.bool;\n      let b = event.target.checked;\n      this.setState({\n        bool: b\n      });\n\n      if (b === true) {\n        change = false;\n        this.setState({\n          bool: true,\n          natija: \"No\"\n        });\n      } else {\n        console.log(\"xato\");\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.inputYes.map((item, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            checked: item.bool,\n            onChange: this.Full\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.imputNo.map((item, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"\",\n            children: item.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            checked: item.bool,\n            onChange: this.Fill\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.state.natija\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/777/Desktop/React/REAKT/Новая папка/qolib/src/Compnent/Radio.jsx"],"names":["React","Component","Radio","state","bool","natija","inputYes","label","imputNo","Full","event","change2","inputyes","a","target","checked","setState","console","log","Fill","change","imputYes","b","render","map","item","index"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Radio extends Component {\r\n\r\n    state = {\r\n        bool: true,\r\n        natija: '',\r\n        inputYes: [\r\n            {\r\n                label: \"yes\",\r\n                bool: false\r\n            },\r\n        ],\r\n        imputNo: [\r\n            {\r\n                label: \"No\",\r\n                bool: false\r\n            }\r\n\r\n        ]\r\n    }\r\n\r\n    Full = (event) => {\r\n        const change2 = this.state.inputyes.bool\r\n\r\n        let a = event.target.checked\r\n\r\n\r\n        if (a === true) {\r\n\r\n            this.setState({\r\n                bool: a,\r\n                natija: \"yes\"\r\n            })\r\n\r\n\r\n        } else {\r\n            console.log(\"xato yes\");\r\n        }\r\n    }\r\n\r\n\r\n    Fill = (event) => {\r\n        const change = this.state.imputYes.bool\r\n\r\n        let b = event.target.checked\r\n\r\n        this.setState({\r\n            bool: b\r\n        })\r\n\r\n\r\n        if(b === true) {\r\n\r\n            change = false\r\n            this.setState({\r\n                bool: true,\r\n                natija: \"No\"\r\n            })\r\n        } else {\r\n            console.log(\"xato\");\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <div>\r\n                    {\r\n                        this.state.inputYes.map((item, index) => <>\r\n                            <label htmlFor=\"\">{item.label}</label>\r\n                            <input type=\"radio\" checked={item.bool} onChange={this.Full} />\r\n                        </>)\r\n                    }\r\n                </div>\r\n\r\n                <div>\r\n                    {\r\n                        this.state.imputNo.map((item, index) => <>\r\n                            <label htmlFor=\"\">{item.label}</label>\r\n                            <input type=\"radio\" checked={item.bool} onChange={this.Fill} />\r\n                        </>)\r\n                    }\r\n                </div>\r\n\r\n                <div>\r\n                    <h1>{this.state.natija}</h1>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}